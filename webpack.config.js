const webpack = require('webpack'),    path = require('path'),    fs = require('fs');const HtmlWebpackPlugin = require('html-webpack-plugin');const ExtractTextPlugin = require("extract-text-webpack-plugin");const distPath = path.join(__dirname + '/dist');const srcPath = path.join(__dirname + '/src');const cssFileName = process.env.NODE_ENV === 'production' ? 'style/[name].css' : 'style/[name].[contenthash].css';const extractSass = new ExtractTextPlugin(cssFileName);const config = {    entry: path.join(srcPath, '/index.js'),    output: {        path: distPath,        filename: 'app.bundle.js'    },    module: {        loaders: [            {                test: /\.html$/, loader: 'raw-loader'            },            {                test: /\.scss$/,                use: extractSass.extract(['css-loader','resolve-url-loader', 'sass-loader']),            },            {                test: /\.(eot|svg|ttf|woff|woff2|otf)$/,                use:[                    { loader: 'file-loader', options: { name: '/style/font/[name].[ext]'} },                ]            },            {                test: /\.(gif|png|jpe?g|svg)$/i,                loaders: [                    'file-loader?name=/public/icons/[name].[ext]',                    'image-webpack-loader?{optimizationLevel: 7, interlaced: false, pngquant:{quality: "65-90", speed: 4}, mozjpeg: {quality: 65}}'                ]            }        ]    },    resolve: {        extensions: ['*', '.js', '.ts', '.html', '.css', 'scss']    },    devServer: {        publicPath: "/",        contentBase: path.join(__dirname, "src")    },    plugins: [        extractSass,        new webpack.optimize.UglifyJsPlugin({            compress: process.env.NODE_ENV === 'production'        }),        new HtmlWebpackPlugin({            filename: 'index.html',            template: './src/index.html'        }),        new webpack.DefinePlugin({            app: {                environment: JSON.stringify(process.env.APP_ENVIRONMENT || 'development')            }        })    ]};config.devtool = '#cheap-module-source-map';console.log('curreunt mode : ', process.env.NODE_ENV + ' mode');module.exports = config;